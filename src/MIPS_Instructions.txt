### 1. Arithmetic and Logical Instructions

| Mnemonic | Description                           | Layout                | Opcode  | Funct  |
|----------|---------------------------------------|-----------------------|---------|--------|
| `add`    | Add (with overflow)                   | add $d, $s, $t        | 000000  | 100000 |
| `addu`   | Add unsigned (no overflow)            | addu $d, $s, $t       | 000000  | 100001 |
| `sub`    | Subtract (with overflow)              | sub $d, $s, $t        | 000000  | 100010 |
| `subu`   | Subtract unsigned (no overflow)       | subu $d, $s, $t       | 000000  | 100011 |
| `mult`   | Multiply (signed)                     | mult $s, $t           | 000000  | 011000 |
| `multu`  | Multiply unsigned                     | multu $s, $t          | 000000  | 011001 |
| `div`    | Divide (signed)                       | div $s, $t            | 000000  | 011010 |
| `divu`   | Divide unsigned                       | divu $s, $t           | 000000  | 011011 |
| `and`    | Bitwise AND                           | and $d, $s, $t        | 000000  | 100100 |
| `or`     | Bitwise OR                            | or $d, $s, $t         | 000000  | 100101 |
| `xor`    | Bitwise XOR                           | xor $d, $s, $t        | 000000  | 100110 |
| `nor`    | Bitwise NOR                           | nor $d, $s, $t        | 000000  | 100111 |
| `sll`    | Shift left logical                    | sll $d, $t, shamt     | 000000  | 000000 |
| `srl`    | Shift right logical                   | srl $d, $t, shamt     | 000000  | 000010 |
| `sra`    | Shift right arithmetic                | sra $d, $t, shamt     | 000000  | 000011 |
| `slt`    | Set on less than (signed)             | slt $d, $s, $t        | 000000  | 101010 |
| `sltu`   | Set on less than unsigned             | sltu $d, $s, $t       | 000000  | 101011 |

### 2. Data Transfer Instructions

| Mnemonic | Description                           | Layout                | Opcode  | Funct  |
|----------|---------------------------------------|-----------------------|---------|--------|
| `lw`     | Load word                             | lw $t, offset($s)     | 100011  | NULL   |
| `sw`     | Store word                            | sw $t, offset($s)     | 101011  | NULL   |
| `lb`     | Load byte                             | lb $t, offset($s)     | 100000  | NULL   |
| `sb`     | Store byte                            | sb $t, offset($s)     | 101000  | NULL   |
| `lbu`    | Load byte unsigned                    | lbu $t, offset($s)    | 100100  | NULL   |
| `lh`     | Load halfword                         | lh $t, offset($s)     | 100001  | NULL   |
| `sh`     | Store halfword                        | sh $t, offset($s)     | 101001  | NULL   |
| `lui`    | Load upper immediate                  | lui $t, imm           | 001111  | NULL   |

### 3. Branch and Jump Instructions

| Mnemonic | Description                               | Layout                | Opcode  | Funct |
|----------|-------------------------------------------|-----------------------|---------|-------|
| `beq`    | Branch if equal                          | beq $s, $t, offset    | 000100  | NULL   |
| `bne`    | Branch if not equal                      | bne $s, $t, offset    | 000101  | NULL   |
| `bgtz`   | Branch if greater than zero              | bgtz $s, offset       | 000111  | NULL   |
| `bltz`   | Branch if less than zero                 | bltz $s, offset       | 000001  | NULL   |
| `j`      | Jump                                     | j target              | 000010  | NULL   |
| `jal`    | Jump and link                            | jal target            | 000011  | NULL   |
| `jr`     | Jump register                            | jr $s                 | 000000  | 001000 |

### 4. Immediate Instructions

| Mnemonic | Description                            | Layout                | Opcode  | Funct  |
|----------|----------------------------------------|-----------------------|---------|--------|
| `addi`   | Add immediate (with overflow)          | addi $t, $s, imm      | 001000  | NULL   |
| `addiu`  | Add immediate unsigned (no overflow)   | addiu $t, $s, imm     | 001001  | NULL   |
| `andi`   | AND immediate                          | andi $t, $s, imm      | 001100  | NULL   |
| `ori`    | OR immediate                           | ori $t, $s, imm       | 001101  | NULL   |
| `xori`   | XOR immediate                          | xori $t, $s, imm      | 001110  | NULL   |
| `slti`   | Set on less than immediate             | slti $t, $s, imm      | 001010  | NULL   |
| `sltiu`  | Set on less than immediate unsigned    | sltiu $t, $s, imm     | 001011  | NULL   |

### 5. Special Instructions

| Mnemonic | Description                            | Layout                | Opcode  | Funct  |
|----------|----------------------------------------|-----------------------|---------|--------|
| `nop`    | No operation (often implemented as sll $0, $0, 0) | nop                   | 000000  | 000000 |
| `syscall`| System call                            | syscall               | 000000  | 001100 |
